{"remainingRequest":"/var/www/digital-eduction/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/digital-eduction/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/digital-eduction/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/digital-eduction/src/components/AcardionFAQComponent.vue?vue&type=template&id=643bae64&","dependencies":[{"path":"/var/www/digital-eduction/src/components/AcardionFAQComponent.vue","mtime":1610022691797},{"path":"/var/www/digital-eduction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/digital-eduction/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/digital-eduction/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/digital-eduction/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}